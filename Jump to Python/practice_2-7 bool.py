### 불 자료형이란?
# 불(bool) 자료형이란 참(Trut)와 거짓(False)를 나타내는 자료형
# True = 참
# False = 거짓
# True 나 False는 파이썬의 예약어로 true, false와 같이 사용하지 말고 첫 문자를 항상 대문자로 사용 해야함.

# a = True
# b = False

# 따옴표로 감싸지 않은 문자열을 변수에 지정해서 오류가 발생할 것 같지만 잘 실행된다. 
# type 함수를 변수 a와 b에 사용하면 두 변수의 자료형이 bool로 지정된 것을 확인할 수 있다.
# print(type(a))
# print(type(b))
# type(x)는 x의 자료형을 확인하는 파이썬의 내장 함수이다.

# 불 자료형은 조건문의 반환 값으로도 사용된다. 조건문에 대해서는 if문에서 자세히 배우겠지만 잠시 살펴보고 넘어가자
# print(1 == 1) # 1은 1의 참/거짓을 따지는 것인데 '1는 1과 같다'라는 명제가 참이기 때문에 True값이 반환된다
# print(1 == 2) # 1은 2와 다르기 때문에 이 명제의 닶은 False다
# print(2 > 1) # 2는 1보다 크기 때문에 True를 반환한다 
# print(2 < 1) # 2가 1보다 크기 때문에 False를 반환한다


### 자료형의 참과 거짓
# 자료형에 참과 거짓이 있다? 조금 이상하게 들리겠지만 참과 거짓은 분명히 있다. 이는 매우 중요한 특징이며 실제로도 자주 쓰인다.
# 자료형의 참과 거짓을 구분하는 기준은 다음과 같다.
"""
값	참 or 거짓
"python"	참
""	거짓
[1, 2, 3]	참
[]	거짓
()	거짓
{}	거짓
1	참
0	거짓
None	거짓
"""
# 문자열, 리스트, 튜플, 딕셔너리 등의 값이 비어 있으면 거짓이 된다. 당연히 비어있지 않으면 참이 된다. 

# 다음 예를 보고 참과 거짓이 프로그램에서 어떻게 쓰이는지 간단히 알아보자
# a = [1, 2, 3, 4]
# while a:
#   print(a.pop()) # 리스트에 맨 마지막 값을 출력하고 삭제
# 즉 위 예를 보면 a가 참인 경우에 a.pop()을 계속 실행하라는 의미이다. a.pop() 함수는 리스트 a의 마지막 요소를 끄집내어는 함수이므로
# 리스트 안에 요소가 존재하는 한(a가 참인 동안) 마지막 요소를 계속해서 끄집어낼 것이다. 결국 더 이상 끄집어낼 것이 없으면 a가 빈 리스트([]) 되어 거짓이 된다.
# 따라서 while 문에서 조건이 거짓이 되므로 중지된다. 위에서 본 예는 파이썬 프로그래밍에서 매우 자주 사용하는 기법이다. 

# 위 예가 너무 복잡하다고 생각하는 독자는 다음 예를 보면 쉽게 이해될 것이다.
# if []: # 위에 자료형을 참/거짓을 구분하는 기준으로 리스트가 비어있기 때문에 거짓이 된다.
#   print("참")
# else:
#   print("거짓")

# []는 앞의 표에서 볼 수 있듯이 비어 있는 리스트이므로 거짓이다. 따라서 "거짓"이란 문자열이 출력된다. 
# if 문에 대해서 잘 모르는 독자라도 위 문장을 해석하는 데는 무리가 없을 것이다.
# if [1, 2, 3]:
#   print("참")
# else:
#   print("거짓")


print(bool("python"))
print(bool("")) # ""은 빈 문자열이므로 bool 연산의 결과로 불 자료형인 False를 돌려준다. 

print(bool([1, 2, 3]))
print(bool([]))
print(bool(0))
print(bool(3))

