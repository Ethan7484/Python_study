### abs
# abs(x)는 어떤 숫자를 입력받았을 때, 그 숫자의 절댓값을 돌려주는 함수이다.
"""
print(abs(3))    # 3을 출력
print(abs(-3))   # 3을 출력
print(abs(-1.2))    # 1.2를 출력 
"""



### all
# all(x)는 반복 가능한(iterable) 자로형 x를 입력 인수로 받으며 이 x의 요소가 모두 참이면 True,
# 거짓이 하나라도 있으면 False를 돌려준다.
# >> 반복 가능한 자료형이란 for문으로 그 값을 출력할 수 있는 것을 의미한다.
# 다음 예를 보자
"""
all([1, 2, 3])
print(all([1, 2, 3]))
"""
# 리스트 자료형 [1, 2, 3]은 모든 요소가 참이므로 True를 돌려준다.
"""
all([1, 2, 3, 0])
print(all([1, 2, 3, 0]))
"""
# 만약 all의 입력 인수가 빈 값이 경우에는 True를 리턴한다.
# >> 자료형의 참과 거짓에 대해 잘 기억나지 않는다면 2-7을 다시 한번 읽어보자.



### any 
# any(x)는 반복 가능한(iterable) 자로형 x를 입력 인수로 받으며 이 x의 요소 중 하나라도 참이 있으면 True를 톨려주고
# x가 모두 거짓일 때에만 False를 돌려준다. all(x)의 반대이다.

"""
a = any([1, 2, 3, 0])    
print(a)    # 리스트 자료형 [1, 2, 3, 0] 중에서 1, 2, 3이 참이므로 True를 돌려준다.
b = any([0, ""])    
print(b)    # 리스트 자료형 [0, ""]의 요소 0과 ""은 모두 거짓이므로 False를 돌려준다.
c = any([])
print(c)    # 만약 any의 입력 인수가 빈 값인 경우에는 False를 돌려준다.
"""



### chr
# chr(i)는 아스키(ASCII) 코드 값을 입력받아 그 코드에 해당하는 문자를 출력하는 함수이다.
# >> 아스키 코드란 0에서 127 사이의 숫자를 각각 하나의 문자 또는 기호에 대응시켜 놓은 것이다.
"""
print(chr(97))    # 'a'
print(chr(48))    # '0'
print(chr(33))    # '!'
"""



### dir
# dir은 객체가 자체적으로 가지고 있는 변수나 함수를 보여준다. 다음 예는 리스ㅡ와 딕셔너리 객체 관련 함수(메서드)를 보여 주는 예이다.
# 우리가 02장에서 살펴본 자료형 관련 함수를 만나 볼 수 있다.

"""
dir([1, 2, 3])
print(dir([1, 2, 3]))
dir({'1':'a'})
print(dir({'1':'a'}))
"""



### divmod
# divmod(a, b)는 2개의 숫자를 입력으로 받는다. 그리고 a를 b로 나눈 몫과 나머지를 튜프 형태로 돌려주는 함수이다.

divmod(7, 3)
print(divmod(7, 3))
